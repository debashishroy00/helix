{
  "info": {
    "name": "Helix AI Engine - 10-Layer Test Suite",
    "description": "Comprehensive test collection for all 10 layers of the Helix AI Engine",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "🚀 System Health Check",
      "item": [
        {
          "name": "1. API Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('API is operational', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('System has correct layers', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.layers_initialized).to.be.at.least(8);",
                  "    pm.expect(jsonData.total_layers).to.equal(10);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "2. Layer Status Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/layers/status",
              "host": ["{{base_url}}"],
              "path": ["layers", "status"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('All 10 layers are defined', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.total_layers).to.equal(10);",
                  "    pm.expect(jsonData.layers).to.have.property('Layer 1');",
                  "    pm.expect(jsonData.layers).to.have.property('Layer 10');",
                  "});",
                  "",
                  "pm.test('System is operational', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.system_status).to.equal('operational');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "3. System Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/metrics",
              "host": ["{{base_url}}"],
              "path": ["metrics"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Metrics endpoint responds', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "🎯 Comprehensive 10-Layer Tests",
      "item": [
        {
          "name": "1. Salesforce Login Button",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"intent\": \"login button\",\n  \"platform\": \"salesforce_lightning\",\n  \"url\": \"https://company.salesforce.com/login\",\n  \"page_type\": \"login\",\n  \"html_content\": \"<div class=\\\"slds-form-element\\\"><input type=\\\"email\\\" class=\\\"slds-input\\\" placeholder=\\\"Username\\\"><input type=\\\"password\\\" class=\\\"slds-input\\\" placeholder=\\\"Password\\\"><button type=\\\"submit\\\" class=\\\"slds-button slds-button_brand\\\">Log In</button></div>\",\n  \"max_strategies\": 10\n}"
            },
            "url": {
              "raw": "{{base_url}}/find_element_comprehensive",
              "host": ["{{base_url}}"],
              "path": ["find_element_comprehensive"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Found strategies', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.found).to.be.true;",
                  "    pm.expect(jsonData.strategies).to.be.an('array');",
                  "    pm.expect(jsonData.strategies.length).to.be.at.least(3);",
                  "});",
                  "",
                  "pm.test('Multiple layers executed', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.stats.layers_executed).to.be.at.least(7);",
                  "});",
                  "",
                  "pm.test('Performance under 100ms', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.stats.total_time_ms).to.be.below(100);",
                  "});",
                  "",
                  "pm.test('High confidence top strategy', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.top_strategy.confidence).to.be.above(0.7);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "2. ServiceNow Search Box",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"intent\": \"search box\",\n  \"platform\": \"servicenow\",\n  \"url\": \"https://company.service-now.com/nav_to.do\",\n  \"page_type\": \"application\",\n  \"html_content\": \"<div class=\\\"navbar-search\\\"><input type=\\\"search\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\"><button class=\\\"btn btn-primary\\\">Search</button></div>\",\n  \"max_strategies\": 10\n}"
            },
            "url": {
              "raw": "{{base_url}}/find_element_comprehensive",
              "host": ["{{base_url}}"],
              "path": ["find_element_comprehensive"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Found search box strategies', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.found).to.be.true;",
                  "    pm.expect(jsonData.top_strategy.selector).to.include('search');",
                  "});",
                  "",
                  "pm.test('Universal selector used', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.top_strategy.selector).to.include('input[type=\"search\"]');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "3. Workday Navigation Link",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"intent\": \"home link\",\n  \"platform\": \"workday\",\n  \"url\": \"https://company.workday.com/dashboard\",\n  \"page_type\": \"application\",\n  \"html_content\": \"<nav class=\\\"wd-nav\\\"><a href=\\\"/home\\\" class=\\\"nav-link\\\">Home</a><a href=\\\"/profile\\\" class=\\\"nav-link\\\">Profile</a><a href=\\\"/logout\\\" class=\\\"nav-link\\\">Logout</a></nav>\",\n  \"max_strategies\": 10\n}"
            },
            "url": {
              "raw": "{{base_url}}/find_element_comprehensive",
              "host": ["{{base_url}}"],
              "path": ["find_element_comprehensive"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Found home link', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.found).to.be.true;",
                  "    pm.expect(jsonData.top_strategy.selector).to.include('home');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "4. Complex Form Save Button",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"intent\": \"save button\",\n  \"platform\": \"generic\",\n  \"url\": \"https://app.example.com/form\",\n  \"page_type\": \"form\",\n  \"html_content\": \"<form class=\\\"complex-form\\\"><fieldset><input type=\\\"text\\\" name=\\\"firstName\\\" required><input type=\\\"email\\\" name=\\\"email\\\" required><select name=\\\"department\\\"><option>Sales</option><option>Engineering</option></select></fieldset><div class=\\\"form-actions\\\"><button type=\\\"submit\\\" class=\\\"btn-primary\\\">Save Changes</button><button type=\\\"button\\\" class=\\\"btn-secondary\\\">Cancel</button></div></form>\",\n  \"max_strategies\": 10\n}"
            },
            "url": {
              "raw": "{{base_url}}/find_element_comprehensive",
              "host": ["{{base_url}}"],
              "path": ["find_element_comprehensive"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Found save button with high confidence', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.found).to.be.true;",
                  "    pm.expect(jsonData.top_strategy.confidence).to.be.above(0.8);",
                  "});",
                  "",
                  "pm.test('Multiple layer strategies', function () {",
                  "    const jsonData = pm.response.json();",
                  "    const strategyTypes = jsonData.strategies.map(s => s.strategy_type);",
                  "    const uniqueTypes = [...new Set(strategyTypes)];",
                  "    pm.expect(uniqueTypes.length).to.be.at.least(3);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "🌐 Cross-Platform Universality",
      "item": [
        {
          "name": "Username Field - Salesforce",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"intent\": \"username field\",\n  \"platform\": \"salesforce_lightning\",\n  \"html_content\": \"<input type=\\\"email\\\" class=\\\"slds-input\\\" placeholder=\\\"Username\\\">\",\n  \"max_strategies\": 5\n}"
            },
            "url": {
              "raw": "{{base_url}}/find_element_comprehensive",
              "host": ["{{base_url}}"],
              "path": ["find_element_comprehensive"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Universal email selector', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.top_strategy.selector).to.include('input[type=\"email\"]');",
                  "});",
                  "",
                  "// Store for cross-platform comparison",
                  "pm.globals.set('salesforce_username_selector', pm.response.json().top_strategy.selector);"
                ]
              }
            }
          ]
        },
        {
          "name": "Username Field - ServiceNow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"intent\": \"username field\",\n  \"platform\": \"servicenow\",\n  \"html_content\": \"<input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\">\",\n  \"max_strategies\": 5\n}"
            },
            "url": {
              "raw": "{{base_url}}/find_element_comprehensive",
              "host": ["{{base_url}}"],
              "path": ["find_element_comprehensive"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Same universal selector as Salesforce', function () {",
                  "    const jsonData = pm.response.json();",
                  "    const salesforceSelector = pm.globals.get('salesforce_username_selector');",
                  "    pm.expect(jsonData.top_strategy.selector).to.equal(salesforceSelector);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Username Field - Workday",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"intent\": \"username field\",\n  \"platform\": \"workday\",\n  \"html_content\": \"<input type=\\\"email\\\" class=\\\"wd-input\\\" placeholder=\\\"Username\\\">\",\n  \"max_strategies\": 5\n}"
            },
            "url": {
              "raw": "{{base_url}}/find_element_comprehensive",
              "host": ["{{base_url}}"],
              "path": ["find_element_comprehensive"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Universal selector consistency', function () {",
                  "    const jsonData = pm.response.json();",
                  "    const salesforceSelector = pm.globals.get('salesforce_username_selector');",
                  "    pm.expect(jsonData.top_strategy.selector).to.equal(salesforceSelector);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "🧠 ML Fusion Layer Tests",
      "item": [
        {
          "name": "Record Successful Outcome",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"selector\": \"button[type=\\\"submit\\\"]\",\n  \"success\": true,\n  \"confidence\": 0.85,\n  \"strategy_type\": \"semantic_intent\",\n  \"performance_tier\": \"fast\",\n  \"intent\": \"login button\",\n  \"platform\": \"salesforce_lightning\",\n  \"execution_time_ms\": 12.5\n}"
            },
            "url": {
              "raw": "{{base_url}}/record_feedback",
              "host": ["{{base_url}}"],
              "path": ["record_feedback"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Feedback recorded successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.equal('feedback_recorded');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Record Failed Outcome",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"selector\": \"div.custom-button\",\n  \"success\": false,\n  \"confidence\": 0.45,\n  \"strategy_type\": \"visual_fingerprint\",\n  \"performance_tier\": \"expensive\",\n  \"intent\": \"login button\",\n  \"platform\": \"salesforce_lightning\",\n  \"execution_time_ms\": 150.0,\n  \"error_message\": \"Element not found\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/record_feedback",
              "host": ["{{base_url}}"],
              "path": ["record_feedback"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Failed outcome recorded', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.equal('feedback_recorded');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Test ML Learning Impact",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"intent\": \"login button\",\n  \"platform\": \"salesforce_lightning\",\n  \"html_content\": \"<button type=\\\"submit\\\">Login</button><div class=\\\"custom-button\\\">Login</div>\",\n  \"max_strategies\": 10\n}"
            },
            "url": {
              "raw": "{{base_url}}/find_element_comprehensive",
              "host": ["{{base_url}}"],
              "path": ["find_element_comprehensive"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('ML fusion improved ranking', function () {",
                  "    const jsonData = pm.response.json();",
                  "    // Should prefer button[type=\"submit\"] over div.custom-button based on feedback",
                  "    pm.expect(jsonData.top_strategy.selector).to.include('button[type=\"submit\"]');",
                  "    pm.expect(jsonData.strategies.length).to.be.at.least(5);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "⚡ Performance Tests",
      "item": [
        {
          "name": "Speed Test - Simple Query",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"intent\": \"login button\",\n  \"platform\": \"salesforce_lightning\",\n  \"html_content\": \"<button type=\\\"submit\\\">Login</button>\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/find_element_smart",
              "host": ["{{base_url}}"],
              "path": ["find_element_smart"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Fast response time', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.time_taken_ms).to.be.below(10);",
                  "});",
                  "",
                  "pm.test('High confidence result', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.confidence).to.be.above(0.8);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Speed Test - Comprehensive Analysis",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"intent\": \"submit button\",\n  \"platform\": \"salesforce_lightning\",\n  \"html_content\": \"<div class=\\\"slds-page-header\\\"><form class=\\\"slds-form\\\"><fieldset class=\\\"slds-form-fieldset\\\"><div class=\\\"slds-form-element\\\"><input type=\\\"text\\\" class=\\\"slds-input\\\" required></div><div class=\\\"slds-form-element\\\"><input type=\\\"email\\\" class=\\\"slds-input\\\" required></div></fieldset><div class=\\\"slds-form-element\\\"><button type=\\\"submit\\\" class=\\\"slds-button slds-button_brand\\\">Submit Application</button><button type=\\\"button\\\" class=\\\"slds-button slds-button_neutral\\\">Cancel</button></div></form></div>\",\n  \"max_strategies\": 10\n}"
            },
            "url": {
              "raw": "{{base_url}}/find_element_comprehensive",
              "host": ["{{base_url}}"],
              "path": ["find_element_comprehensive"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Comprehensive analysis under 100ms', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.stats.total_time_ms).to.be.below(100);",
                  "});",
                  "",
                  "pm.test('ML fusion processing efficient', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.stats.fusion_time_ms).to.be.below(20);",
                  "});",
                  "",
                  "pm.test('Multiple strategies found', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.strategies.length).to.be.at.least(5);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "🔍 Individual Layer Tests",
      "item": [
        {
          "name": "Semantic Layer Only",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"intent\": \"search box\",\n  \"platform\": \"generic\",\n  \"html_content\": \"<input type=\\\"search\\\" placeholder=\\\"Search\\\">\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/test/semantic_only",
              "host": ["{{base_url}}"],
              "path": ["test", "semantic_only"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Semantic layer generates strategies', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.strategies_found).to.be.at.least(1);",
                  "    pm.expect(jsonData.execution_time_ms).to.be.below(5);",
                  "});",
                  "",
                  "pm.test('Universal search selector used', function () {",
                  "    const jsonData = pm.response.json();",
                  "    const topStrategy = jsonData.strategies[0];",
                  "    pm.expect(topStrategy.selector).to.include('input[type=\"search\"]');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "📖 API Documentation",
      "item": [
        {
          "name": "Get API Documentation",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/docs",
              "host": ["{{base_url}}"],
              "path": ["api", "docs"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Documentation available', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.title).to.include('Helix');",
                  "    pm.expect(jsonData.endpoints).to.be.an('object');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script for all tests",
          "console.log('🚀 Running Helix AI Engine test: ' + pm.info.requestName);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script for all requests",
          "pm.test('Response time acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "pm.test('No server errors', function () {",
          "    pm.response.to.not.have.status(500);",
          "});"
        ]
      }
    }
  ]
}