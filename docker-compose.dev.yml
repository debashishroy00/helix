services:
  # PostgreSQL with pgvector for similarity search
  postgres:
    image: ankane/pgvector:v0.5.1
    environment:
      POSTGRES_DB: helix
      POSTGRES_USER: helix
      POSTGRES_PASSWORD: helix_password
    ports:
      - "5433:5432"  # Use different port to avoid conflicts
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U helix"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching strategies
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"  # Use different port to avoid conflicts
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Helix API Service
  helix-api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://helix:helix_password@postgres:5432/helix
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HEADLESS=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src:ro  # Read-only mount for development
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: